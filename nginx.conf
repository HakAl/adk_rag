events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;

    upstream backend {
        server rag-agent:8000;
    }

    server {
        listen 80;
        server_name _;

        # Root for static files
        root /usr/share/nginx/html;
        index index.html;

        # API endpoints - proxy to FastAPI with streaming support
        location ~ ^/(sessions|chat|health|api|logout) {
            proxy_pass http://backend;
            proxy_http_version 1.1;

            # Critical for SSE streaming
            proxy_buffering off;
            proxy_cache off;
            proxy_set_header Connection '';
            chunked_transfer_encoding on;

            # Extended timeout for long-running streams
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;

            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Handle preflight
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:3000" always;
                add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header Access-Control-Allow-Headers 'Content-Type, X-CSRF-Token' always;
                add_header Access-Control-Allow-Credentials 'true' always;
                return 204;
            }
        }

        # Static files - serve from nginx
        location / {
            try_files $uri $uri/ /index.html;

            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # SECURITY HEADERS

        # Content Security Policy (CSP)
        # Allows Tailwind inline styles, blocks unsafe scripts
        add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' http://localhost:8000; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

        # Prevent clickjacking
        add_header X-Frame-Options "DENY" always;

        # Prevent MIME type sniffing
        add_header X-Content-Type-Options "nosniff" always;

        # Enable XSS filter (legacy browsers)
        add_header X-XSS-Protection "1; mode=block" always;

        # Referrer policy
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Permissions policy
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}