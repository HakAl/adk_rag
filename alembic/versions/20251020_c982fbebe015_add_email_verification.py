"""add email verification

Revision ID: c982fbebe015
Revises: 001
Create Date: 2025-10-20 13:03:54.173620+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c982fbebe015'
down_revision = '001'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = sa.inspect(conn)

    op.create_table('email_verifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token_hash', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_verifications_expires_at', 'email_verifications', ['expires_at'], unique=False)
    op.create_index('idx_email_verifications_token_hash', 'email_verifications', ['token_hash'], unique=False)
    op.create_index('idx_email_verifications_user_id', 'email_verifications', ['user_id'], unique=False)
    op.create_index(op.f('ix_email_verifications_token_hash'), 'email_verifications', ['token_hash'], unique=True)
    op.drop_constraint('api_tokens_token_hash_key', 'api_tokens', type_='unique')
    op.drop_index('idx_api_tokens_token_hash', table_name='api_tokens')
    op.create_index(op.f('ix_api_tokens_token_hash'), 'api_tokens', ['token_hash'], unique=True)

    # Only drop and recreate sessions index if sessions table and index exist
    if 'sessions' in inspector.get_table_names():
        indexes = [idx['name'] for idx in inspector.get_indexes('sessions')]
        if 'idx_sessions_user_id' in indexes:
            op.drop_index('idx_sessions_user_id', table_name='sessions')
        if 'ix_sessions_user_id' not in indexes:
            # Check if user_id column exists before creating index
            columns = [col['name'] for col in inspector.get_columns('sessions')]
            if 'user_id' in columns:
                op.create_index(op.f('ix_sessions_user_id'), 'sessions', ['user_id'], unique=False)

    op.add_column('users', sa.Column('email_verified', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('users', sa.Column('email_verified_at', sa.DateTime(timezone=True), nullable=True))
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_username', table_name='users')
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = sa.inspect(conn)

    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_username_key', 'users', ['username'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint('users_email_key', 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.drop_column('users', 'email_verified_at')
    op.drop_column('users', 'email_verified')

    if 'sessions' in inspector.get_table_names():
        indexes = [idx['name'] for idx in inspector.get_indexes('sessions')]
        if 'ix_sessions_user_id' in indexes:
            op.drop_index(op.f('ix_sessions_user_id'), table_name='sessions')
        if 'idx_sessions_user_id' not in indexes:
            op.create_index('idx_sessions_user_id', 'sessions', ['user_id'], unique=False)

    op.drop_index(op.f('ix_api_tokens_token_hash'), table_name='api_tokens')
    op.create_index('idx_api_tokens_token_hash', 'api_tokens', ['token_hash'], unique=False)
    op.create_unique_constraint('api_tokens_token_hash_key', 'api_tokens', ['token_hash'], postgresql_nulls_not_distinct=False)
    op.drop_index(op.f('ix_email_verifications_token_hash'), table_name='email_verifications')
    op.drop_index('idx_email_verifications_user_id', table_name='email_verifications')
    op.drop_index('idx_email_verifications_token_hash', table_name='email_verifications')
    op.drop_index('idx_email_verifications_expires_at', table_name='email_verifications')
    op.drop_table('email_verifications')
    # ### end Alembic commands ###