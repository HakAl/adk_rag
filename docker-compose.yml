version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: rag-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rag_agent
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - rag-network

  # Ollama service (optional via profile)
  ollama:
    image: ollama/ollama:latest
    container_name: rag-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    networks:
      - rag-network
    profiles:
      - ollama

  # llama-server service (optional via profile)
  llama-server:
    build:
      context: .
      dockerfile: Dockerfile.llama
    container_name: rag-llama-server
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - ./models:/models:ro
    environment:
      - MODELS_BASE_DIR=/models
      - LLAMA_SERVER_PORT=8080
      - LLAMA_SERVER_MISTRAL_PORT=8081
      - LLAMA_SERVER_HOST=0.0.0.0
      - LLAMACPP_N_CTX=${LLAMACPP_N_CTX:-2048}
      - LLAMACPP_N_THREADS=${LLAMACPP_N_THREADS:-8}
      - LLAMACPP_CHAT_MODEL_PATH=${LLAMACPP_CHAT_MODEL_PATH}
      - LLAMACPP_MISTRAL_MODEL_PATH=${LLAMACPP_MISTRAL_MODEL_PATH:-}
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    networks:
      - rag-network
    profiles:
      - llamacpp

  # RAG Agent Backend
  rag-agent:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PROVIDER_TYPE: ${PROVIDER_TYPE:-ollama}
    container_name: rag-agent-app
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./chroma_db:/app/chroma_db
      - ./logs:/app/logs
      - ./models:/app/models:ro
      - ./.env:/app/.env
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/rag_agent
      - OLLAMA_BASE_URL=http://ollama:11434
      - LLAMA_SERVER_HOST=llama-server
      - PROVIDER_TYPE=${PROVIDER_TYPE:-ollama}
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_TO_FILE=true
      - LOG_LEVEL=INFO
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - rag-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: rag-nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on:
      - rag-agent
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - rag-network

volumes:
  postgres_data:
    driver: local
  ollama_data:
    driver: local

networks:
  rag-network:
    driver: bridge